/*! flo 15-03-2016 */
function newFilledArray(a,b){for(a=0>a?0:Math.floor(a),filledArray=new Array(a);--a>=0;)filledArray[a]=b;return filledArray}function quotient(a,b){return~~(a/b)}function drawTwoViewedBarChart(a,b,c,d,e){var f=_.size(b.consumptions),g=d-2*barChartMargin;e-=4*barChartMargin;var h=e*(f/(1+f));drawBarChart(a.select("#barchart-source-breakdown"),b,c,g,h),a.select("#barchart-aggregated").attr("transform","translate(0,"+(h+barChartMargin)+")"),h=e/(1+f);var i=_.reduce(b.consumptions,function(a,b){return a+b.filtered},0),j=_.cloneDeep(b);j.labels=["Total Consumptions"],j.consumptions=[{total:b.maxConsumption,filtered:i}],drawBarChart(a.select("#barchart-aggregated"),j,c,g,h)}function drawBarChart(a,b,c,d,e){var f=_.size(b.labels),g=d3.scale.linear().domain([0,b.maxConsumption]).range([0,c]),h=d3.scale.linear().domain([0,f-1]).range([barChartPadding.top,e-barChartPadding.bottom]),i=d3.scale.ordinal().domain(b.labels).rangeBands(h.range(),.2,0),j=i.rangeBand()/2;drawBarChartAxis(a,b.labels,i);var k=a.select("g.barchart").html("").selectAll("rect.bar").data(b.consumptions).enter();k.append("rect").classed({bar:!0,"bar-total":!0}).attr("x",barChartPadding.left).attr("y",function(a,c){return i(b.labels[c])}).attr("height",j).attr("width",function(a,b){return g(a.total)}),k.append("rect").classed({bar:!0,"bar-filtered":!0}).attr("x",barChartPadding.left).attr("y",function(a,c){return i(b.labels[c])+j}).attr("height",j).attr("width",function(a,b){return g(a.filtered)})}function drawBarChartAxis(a,b,c){var d=d3.svg.axis().scale(c).orient("left");a.select("g.barchart-axis").call(d)}function populateControls(a,b,c){d3.select("#select-countries").selectAll("option").data(_.flatten(["All Countries",a])).enter().append("option").attr("value",function(a){return a}).text(function(a){return a}).filter(function(a){return"All Countries"===a}).attr("selected",!0),populateEnergySourceControl("#renewable",b.renewable),populateEnergySourceControl("#non-renewable",b["non-renewable"]);var d=_.last(energyMetadata.years);d3.select("#select-year").selectAll("option").data(c).enter().append("option").attr("value",function(a){return a}).text(function(a){return a}).filter(function(a){return a===d}).attr("selected",!0)}function populateEnergySourceControl(a,b){var c=d3.select(a+" div.source-selectors").selectAll("div").data(b).enter().append("div");c.append("input").attr("type","checkbox").attr("value",function(a){return a}).attr("checked",!0),c.append("span").text(function(a){return energyMetadata.sourceNames[a]})}function drawRadialLine(a,b,c,d,e){var f={radius:b,angle:d},g={radius:c,angle:d},h=convertToPathData([f,g]);drawPolygon(a,h,e)}function drawStarPlot(a,b,c,d,e,f,g,h,i){var j=_.reduce(f,function(a,d){var e=c?b[c[0]][d]:b[d];return a+e},0),k=d3.scale.linear().domain([0,j]).range([.1*e,e]),l=!!d;drawStarPlotBase(a,h,f,e,g,l),c?_.forEach(c,function(c){insertDataToStarPlot(a,b[c],k,i[c])}):insertDataToStarPlot(a,b,k,i),d&&insertSustainableGoalToStarPlot(a,b[d],k,i[d])}function drawStarPlotBase(a,b,c,d,e,f){var g=d+padding.inner+.6*padding.outer;f&&(g+=1.25*padding.outer),a.append("text").text(b).attr({dx:0,dy:-g}).classed({"starplot-title":!0,"starplot-text":!0});var h=_.map(c,function(){return d+padding.inner});drawPolygon(a,generatePathData(h),"starplot-base"),e=e||!1,_.forEach(c,function(b,c){var g=c*differentialAngle;if(drawRadialLine(a,.1*d,d,g,"starplot-radial-lines"),e){var h=f?1.2*(d+padding.inner):1.35*(d+padding.inner),i=Math.PI*((g-90)/180);a.append("text").attr({dx:h*Math.cos(i),dy:h*Math.sin(i)}).text(energyMetadata.sourceNames[b]).classed("starplot-text",!0)}})}function insertDataToStarPlot(a,b,c,d){var e=newFilledArray(_.size(b),c(0)),f=_.map(b,function(a){return c(a)}),g=generatePathData(e)+generatePathData(f);drawPolygon(a,g,d)}function insertSustainableGoalToStarPlot(a,b,c,d){var e=_.map(b,function(a){return c(a)});drawPolygon(a,generatePathData(e),d)}function generatePathData(a){var b=_.map(a,function(a,b){return{radius:a,angle:b*differentialAngle}});return convertToPathData(b)+"Z"}function drawStarPlotPolygon(a,b,c){if(_.isArray(c)||_.isString(c)){var d={};_.forEach(_.isString(c)?[c]:c,function(a){d[a]=!0}),c=d}a.append("path").attr("d",b).classed(c)}function drawRadialLine(a,b,c,d,e){var f={radius:b,angle:d},g={radius:c,angle:d},h=convertToPathData([f,g]);drawStarPlotPolygon(a,h,e)}function drawStarPlot(a,b,c,d,e,f,g,h,i){var j=_.reduce(f,function(a,d){var e=c?b[c[0]][d]:b[d];return a+e},0),k=d3.scale.linear().domain([0,j]).range([.1*e,e]),l=!!d;drawStarPlotBase(a,h,f,e,g,l),c?_.forEach(c,function(c){insertDataToStarPlot(a,b[c],k,i[c])}):insertDataToStarPlot(a,b,k,i),d&&insertSustainableGoalToStarPlot(a,b[d],k,i[d])}function drawStarPlotBase(a,b,c,d,e,f){var g=d+padding.inner+.6*padding.outer;f&&(g+=1.25*padding.outer),a.append("text").text(b).attr({dx:0,dy:-g}).classed({"starplot-title":!0,"starplot-text":!0});var h=_.map(c,function(){return d+padding.inner});drawStarPlotPolygon(a,generatePathData(h),"starplot-base"),e=e||!1,_.forEach(c,function(b,c){var g=c*differentialAngle;if(drawRadialLine(a,.1*d,d,g,"starplot-radial-lines"),e){var h=f?1.2*(d+padding.inner):1.35*(d+padding.inner),i=Math.PI*((g-90)/180);a.append("text").attr({dx:h*Math.cos(i),dy:h*Math.sin(i)}).text(energyMetadata.sourceNames[b]).classed("starplot-text",!0)}})}function insertDataToStarPlot(a,b,c,d){var e=newFilledArray(_.size(b),c(0)),f=_.map(b,function(a){return c(a)}),g=generatePathData(e)+generatePathData(f);drawStarPlotPolygon(a,g,d)}function insertSustainableGoalToStarPlot(a,b,c,d){var e=_.map(b,function(a){return c(a)});drawStarPlotPolygon(a,generatePathData(e),d)}function updateVisualization(){filteredCountries=[],sortCountriesByLargestTotalConsumptions(),updateAllAggregatedEnergyData(),clearVisualization(individualCountryVisualizationContainer),drawIndividualEnergyStarPlotForCountries(individualCountryVisualizationContainer,selectedCountries,selectedSources,selectedYear),clearVisualization(aggregatedStarPlotContainer),drawAggregatedEnergyStarPlotForCountries(aggregatedCountryVisualizationContainer,selectedCountries,filteredCountries,selectedSources,selectedYear)}function clearVisualization(a){a.html("")}function sortCountriesByLargestTotalConsumptions(){selectedCountries=_.sortBy(selectedCountries,function(a){return _.reduce(selectedSources,function(b,c){return b-energyData[a][c][selectedYear]},0)})}function drawIndividualEnergyStarPlotForCountries(a,b,c,d){var e=100,f=e/2,g=e+2*(padding.inner+padding.outer),h=4,i=quotient(b.length,h)+1,j=h*g,k=i*g,l=_.map(_.range(h),function(a){return(a+.5)*g}),m=d3.scale.quantize().domain([0,h-1]).range(l),n=_.map(_.range(i),function(a){return(a+.5)*g}),o=d3.scale.quantize().domain([0,Math.max(i-1,1)]).range(n);starPlotMatrixOrigins={};var p=function(a){return{x:m(a%h),y:o(quotient(a,h))}},q=d3.scale.identity().domain([0,j]),r=d3.scale.identity().domain([0,k]);brushingEventListener.x(q).y(r);var s=a.selectAll("g").data(b);s.enter().append("g").attr("id",function(a){return a}).attr("transform",function(a,b){var c=p(b);return starPlotMatrixOrigins[a]=c,"translate("+c.x+","+c.y+")"}).classed({country:!0,starplot:!0}).each(function(a){var b={};_.forEach(c,function(c){b[c]=energyData[a][c][d]}),drawStarPlot(d3.select(this),b,null,null,f,c,!0,a,"starplot-energy")}),a.attr("viewBox",[0,0,j,k].join(" ")).call(brushingEventListener)}function drawAggregatedEnergyStarPlotForCountries(a,b,c,d,e){var f="Total Energy Consumption",g=500,h=g/2,i=g+2*(padding.inner+2*padding.outer),j=i,k=1e3,l=i+2*padding.outer,m=i+2*padding.outer+2*k,n={starplot:{x:.5*l,y:.5*(i+3*padding.outer)},legend:{x:2*padding.outer,y:i+padding.outer+margin},barchart:{x:4*padding.outer,y:i+3.3*padding.outer+2*margin}};a.attr("viewBox",[0,0,l,m].join(" "));var o=aggregatedStarPlotContainer.attr("transform","translate("+n.starplot.x+","+n.starplot.y+")").classed("starplot",!0),p=_.keys(aggregatedEnergyData),q=_.initial(p),r=(_.last(p),{total:"starplot-energy",filtered:["starplot-energy","starplot-filtered-energy"],sustainableGoal:["starplot-energy","sustainable-goal"]});drawStarPlot(o,aggregatedEnergyData,q,"sustainableGoal",h,d,!0,f,r),aggregatedStarPlotLegend.attr("transform","translate("+n.legend.x+","+n.legend.y+")"),aggregatedBarChartContainer.attr("transform","translate("+n.barchart.x+","+n.barchart.y+")");var s=g,t=_.reduce(aggregatedEnergyData.total,function(a,b){return a+b},0),u=[];_.forEach(selectedSources,function(a){var b={total:aggregatedEnergyData.total[a],filtered:aggregatedEnergyData.filtered[a]};u.push(b)});var v={maxConsumption:t,labels:selectedSources,consumptions:u};drawTwoViewedBarChart(aggregatedBarChartContainer,v,s,j,k)}function updateAllAggregatedEnergyData(){updateTotalAggregatedEnergyData(),updateFilteredAggregatedEnergyData()}function updateTotalAggregatedEnergyData(){aggregatedEnergyData.total={},_.forEach(selectedSources,function(a){aggregatedEnergyData.total[a]=_.reduce(selectedCountries,function(b,c){return b+energyData[c][a][selectedYear]},0)}),aggregatedEnergyData.sustainableGoal={};var a=_.reduce(selectedSources,function(a,b){return a+aggregatedEnergyData.total[b]},0)/_.size(_.intersection(selectedSources,energyMetadata.sourcesByTypes.renewable));_.forEach(selectedSources,function(b){aggregatedEnergyData.sustainableGoal[b]="non-renewable"===energyMetadata.sourceTypes[b]?0:a})}function updateFilteredAggregatedEnergyData(){aggregatedEnergyData.filtered={},_.forEach(selectedSources,function(a){aggregatedEnergyData.filtered[a]=_.reduce(filteredCountries,function(b,c){return b+energyData[c][a][selectedYear]},0)})}function brushMove(){var a=brushingEventListener.extent();individualCountryVisualizationContainer.selectAll("g.starplot").classed("starplot-selected",function(b,c){var d=starPlotMatrixOrigins[b];return d.x>a[0][0]&&d.y>a[0][1]&&d.x<a[1][0]&&d.y<a[1][1]})}function brushEnd(){brushingEventListener.empty()&&individualCountryVisualizationContainer.selectAll("g.starplot-selected").classed("starplot-selected",!1),individualCountryVisualizationContainer.call(brushingEventListener.clear()),filteredCountries=individualCountryVisualizationContainer.selectAll("g.starplot-selected").data(),updateFilteredAggregatedEnergyData(),clearVisualization(aggregatedStarPlotContainer),drawAggregatedEnergyStarPlotForCountries(aggregatedCountryVisualizationContainer,selectedCountries,filteredCountries,selectedSources,selectedYear)}var energyData={},energyMetadata={sources:[],sourcesByTypes:{},sourceNames:{},sourceTypes:{},sourceUnits:{},years:[],countries:[]};d3.csv("data/countries.csv",function(a){energyMetadata.countries.push(a.country)},function(a){_.isEmpty(a)||(console.log("Error at loading countries.csv"),console.log(a)),d3.csv("data/sources.csv",function(a){energyMetadata.sources.push(a.sourceKey),energyMetadata.sourceNames[a.sourceKey]=a.sourceName,energyMetadata.sourceTypes[a.sourceKey]=a.sourceType,energyMetadata.sourceUnits[a.sourceKey]=a.unit,energyMetadata.sourcesByTypes[a.sourceType]||(energyMetadata.sourcesByTypes[a.sourceType]=[]),energyMetadata.sourcesByTypes[a.sourceType].push(a.sourceKey)},function(a){_.isEmpty(a)||(console.log("Error at loading sources.csv"),console.log(a)),d3.csv("data/years.csv",function(a){energyMetadata.years.push(+a.year)},function(a){_.isEmpty(a)||(console.log("Error at loading years.csv"),console.log(a)),d3.csv("data/energyData.csv",function(a){energyData[a.country]||(energyData[a.country]={});var b={};_.forEach(energyMetadata.years,function(c){b[c]=+a[c]}),energyData[a.country][a.source]=b},function(a){_.isEmpty(a)||(console.log("Error at loading energyData.csv"),console.log(a)),populateControls(energyMetadata.countries,energyMetadata.sourcesByTypes,energyMetadata.years),selectedCountries=energyMetadata.countries,filteredCountries=[],selectedSources=energyMetadata.sources,numOfSources=selectedSources.length,differentialAngle=360/numOfSources,selectedYear=_.last(energyMetadata.years),updateVisualization()})})})});var barChartMargin=20,barChartPadding={top:20,right:20,bottom:20,left:20},selectedCountries,filteredCountries,selectedSources,numOfSources,selectedYear;d3.select("#select-countries").on("change",function(a){var b=d3.select(this).selectAll("option").filter(function(){return this.selected}).data();selectedCountries=_.includes(b,"All Countries")?energyMetadata.countries:b,updateVisualization()}),d3.select("#select-sources").on("change",function(a){selectedSources=d3.select(this).selectAll("input").filter(function(){return this.checked}).data(),numOfSources=selectedSources.length,differentialAngle=360/numOfSources,updateVisualization()}),d3.select("#select-year").on("change",function(a){selectedYear=+this.value,updateVisualization()});var StarplotCluster=function(a){this.container=containter||null},starplot={};starplot.container=null,starplot.styles={base:{"starplot-base":!0}},starplot.differentialAngle=360,starplot.convertToPathData=d3.svg.line.radial().radius(function(a){return a.radius}).angle(function(a){return Math.PI*(a.angle/180)}),starplot.generatePathData=function(a){var b=_.map(a,function(a,b){return{radius:a,angle:b*differentialAngle}});return convertToPathData(b)+"Z"},starplot.drawPolygon=function(a,b,c){a.append("path").attr("d",b).classed(c)};var differentialAngle,convertToPathData=d3.svg.line.radial().radius(function(a){return a.radius}).angle(function(a){return Math.PI*(a.angle/180)}),individualCountryVisualizationContainer=d3.select("#individual-country-visualization svg"),aggregatedCountryVisualizationContainer=d3.select("#aggregated-country-visualization svg"),aggregatedStarPlotContainer=d3.select("#starplot-container"),aggregatedStarPlotLegend=d3.select("#starplot-legend"),aggregatedBarChartContainer=d3.select("#barchart-container"),padding={inner:10,outer:60},margin=20,starPlotMatrixOrigins,aggregatedEnergyData={total:{},filtered:{},sustainableGoal:{}},brushingEventListener=d3.svg.brush().on("brush",brushMove).on("brushend",brushEnd);